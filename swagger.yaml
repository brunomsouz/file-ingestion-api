openapi: 3.1.0
info:
  title: File ingestion API
  description: |-
    Sample file ingestion API
  version: 1.0.0
servers:
  - url: http://localhost:8080/file-ingestion/v1
tags:
  - name: ingestion
    description: File ingestion operations
  - name: user
    description: User operations
  - name: order
    description: Order operations
paths:
  /upload:
    post:
      tags:
        - ingestion
      summary: Upload an orders file
      description: Upload an orders file to be processed and inserted into database for later querying. Content type must be text/plain.
      operationId: ingest
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
            encoding:
              file:
                contentType: text/plain
      responses:
        204:
          description: No content
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{id}:
    get:
      tags:
        - user
      summary: Find user by id
      description: Returns a single user found by its id
      operationId: findUserById
      parameters:
        - name: id
          in: path
          description: Id of the user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order:
    get:
      tags:
        - order
      summary: Find orders
      description: Returns a list of orders based on query parameters
      operationId: findOrders
      parameters:
        - name: startDate
          in: query
          description: Start date to lookup on database
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: End date to lookup on database
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order/{id}:
    get:
      tags:
        - order
      summary: Find order by id
      description: Returns a single order found by its id
      operationId: findOrder
      parameters:
        - name: id
          in: path
          description: Id of the order
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Bruno
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    Order:
      type: object
      properties:
        order_id:
          type: integer
          format: int64
          example: 1
        total:
          type: number
          format: float
          example: 1499.44
        date:
          type: string
          format: date
          example: 2021-04-09
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    Product:
      type: object
      properties:
        product_id:
          type: integer
          format: int64
          example: 1
        value:
          type: number
          format: float
          example: 1499.44
    Error:
      type: object
      properties:
        message:
          type: string
          example: Some error occurred